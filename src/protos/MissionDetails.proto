package MissionDetails;
syntax = "proto3";

import "Common.proto";
import "ServerInfo.proto";

message GetMissionDetailsRequest {
    required int64 missionId = 1;
    required int64 battleId = 2;
}

message GetMissionDetailsResponse {
    required Common.Response response = 1;     
    required MissionInfo info = 2; 
    repeated MissionDetailsFaction factions = 3; 
    repeated MissionDetailsAssaultTeam assaultTeams = 4; 
    repeated MissionDetailsArmyResource armyResources = 5;
    repeated MissionDetailsAccessPoint accessPoints = 6; 
    repeated MissionDetailsCapturepointStatus capturepointStatuses = 7; 
    required float posX = 8;    
    required float posY = 9; 
}

message MissionInfo {
    required int64 missionId = 1;
    required int64 battleId = 2;
    required int64 missionpreset = 3;
    required int64 mapEntityId = 5;
    required int64 mapEntityTypeId = 6;
    required int32 isAutogenerated = 7;
    required int64 defenderFactionId = 8; 
    enum Status {
        ZERO = 0;
        ONE = 1;
    }
    required Status status = 9;
    required int64 hostingCenterId = 10;
    required string activationTimeStamp = 11;
    required int32 weatherTimeOfDay = 12;
    required int32 weatherCondition = 13;
}

message MissionDetailsFaction {
    required int64 factionId = 1;
    repeated MissionDetailsPlayer players = 2;
}

message MissionDetailsPlayer {
    required string gamerTag = 1;
}

message MissionDetailsAssaultTeam {
    required int64 factionId = 1;
    required int64 commandNodeTemplateId = 2;
    required int64 accessPointTemplateId = 3;
    required int64 ownerPlayerId = 4;
}

message MissionDetailsArmyResource {
    required int64 factionId = 1;
    required int64 armyResourceCategoryId = 2;
    required int64 accessPointTemplateId = 3;
    required uint32 count = 4;
    required bool spawnInAir = 5;
}

message MissionDetailsAccessPoint {
    required int64 accessPointTemplateId = 1;
    required int64 factionTemplateId = 2;
}

message MissionDetailsCapturepointStatus {
    required int64 capturepointTemplateId = 1;
    required int64 ownerFactionId = 2;
}

message JoinMatchMakingRequest {
    required int64 characterId = 1;
    required int64 missionId = 2;
    repeated HostingCenterPing hostingCenters = 3;
    required bool warMissionFlag = 4;
    repeated int64 stagedMissionPresetList = 5;
    repeated int64 squadVehicleFilterArmyResourceTemplateIds = 6;
    required int64 gamemodeId = 7;
    required bool quickplay = 8;
}
