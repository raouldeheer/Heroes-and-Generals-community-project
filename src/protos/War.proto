package War;
syntax = "proto3";

import "Common.proto";

message query_war_catalogue_request {
    optional int64 includeWarId = 1;
}

message query_war_catalogue_response {
    repeated war_catalogue warcataloguedata = 1;
    required int64 bonusId = 2;
}

message war {
    required int64 id = 1;
    required string name = 2;
    required string begintime = 3;
    required string endtime = 4;
    required string web = 5;
    required string friendlyfire = 6;
    required int64 winningfactionid = 7;
    required int32 pointsNeededForVictory = 8;
    required uint32 automissionnormal = 9;
    required uint32 automissionskirmish = 10;
    required uint32 automissionsupply = 11;
    required float strategytimescale = 12;
    required float daycycletimescale = 13;
    required uint32 disablestrategy = 14;
    required int32 maxPlayerPerFaction = 15;
    required int64 sequelwarid = 16;
    required int64 mapid = 17;
    required int32 cleanupStatus = 18;
    required int32 fowGridSize = 19;
    required int32 fowGridOriginX = 20;
    required int32 fowGridOriginY = 21;
    required bool queueReinforcements = 22;
    required bool firstResourceFree = 23;
    required uint32 moraleMinValue = 24;
    required uint32 moraleMaxValue = 25;
    required uint32 moraleLostPerBattle = 26;
    required uint32 moraleGainedPerWin = 27;
    required float moraleGainedPerMinute = 28;
    required uint32 moraleSurrenderLimit = 29;
}

message war_catalogue {
    required int64 id = 1;
    required string name = 2;
    required string wartime = 3;
    required int32 pointsNeededForVictory = 4;
    required int64 winningFactionId = 5;
    required int32 battlefieldCount = 6;
    required int32 assaultTeamCount = 7;
    required int32 playerCount = 8;
    required int32 generalCount = 9;
    required uint32 infantryCount = 10;
    required uint32 tankCount = 11;
    required uint32 planeCount = 12;
    required uint32 vehicleCount = 13;
    required int64 sequelWarId = 14;
    repeated war_catalogue_faction warCatalogueFactions = 15;
}

message war_catalogue_faction {
    required int64 factionId = 1;
    required int64 factionTemplateId = 2;
    required string factionTag = 3;
    required int32 factionVictoryPoints = 4;
    required int32 factionPlayerCount = 5;
    required int32 factionMinPlayerCount = 6;
    required int32 factionMaxPlayerCount = 7;
    required int32 factionPlayerOnlineCount = 8;
    required int32 factionBonus = 9;
    required int32 factionDeployedCommandPointsInfantry = 10;
    required int32 factionDeployedCommandPointsArmor = 11;
    required int32 factionDeployedCommandPointsAir = 12;
    required int32 factionControlledBattlefields = 13;
    required uint32 battlesWon = 14;
    required uint32 battlesLost = 15;
    required uint32 infantryLost = 16;
    required uint32 vehiclesLost = 17;
    required uint32 tanksLost = 18;
    required uint32 planesLost = 19;
    repeated int64 ownedMajorCities = 20;
}

message GetAssaultTeamStatsRequest {
    repeated int64 commandNodeDefinitionIds = 1;
}

message GetAssaultTeamStatsResponse {
    repeated GetAssaultTeamStatsRecord records = 1;
}

message GetAssaultTeamStatsRecord {
    required Common.Response result = 1;
    required int32 rank = 2;
    required int32 xp = 3;
    required int32 nextLevelUpXp = 4;
    required int32 battles = 5;
    required int32 battlesWon = 6;
    required int64 commandNodeDefinitionId = 7;
}

message transport_commandnode {
    required int64 commandNodeWarInstanceId = 1;
    required int64 targetId = 2;
    required string targetType = 3;
    optional int64 overrideTargetAccesspointId = 4;
    optional bool overrideMove = 5;
    repeated transport_commandnode_request_segment path = 6;
}

message transport_commandnode_request_segment {
    required int64 mapEntityId = 1;
    required int64 mapEntityType = 2;
}

message transport_commandnode_response {
    enum Msg {
        aMsg = 1;
    }
    required int64 commandNodeWarInstanceId = 1;
    required int64 battlefieldId = 2;
    required Msg msg = 3;
}

message query_commandnode_owner {
    required int64 commandNodeWarInstanceId = 1;
}

message query_commandnode_owner_response {
    required string name = 1;
}


message BattleInfo {
    required int64 id = 1;
    required float posX = 2;
    required float posY = 3;
}

message battlefieldstatus {
    required sfixed64 id = 1;
    required int64 warid = 2;
    required int64 battlefieldid = 3;
    required int64 factionid = 4;
    optional int64 defencesetupid = 6;
}

message battlefield {
    required int64 id = 1;
    required int64 mapid = 2;
    required string bftitle = 3;
    required string sector = 4;
    required float posx = 5;
    required float posy = 6;
    required int64 gamemap = 7;
    optional float rotation = 8;
}

message FactionResourceQueue {
    required int64 id = 1;
    required int64 factionId = 2;
    required int64 warId = 3;
    required int32 supplyQueueHead = 4;
    required int32 supplyQueueTail = 5;
}

message FactionResourceProduction {
    required int64 id = 1;
    required int64 factionId = 2;
    required int64 warId = 3;
    required int64 factionHQCommandNodeWarInstanceId = 4;
    required int64 armyResourceCategoryId = 5;
    required int64 armyResourceProductionTemplateId = 6;
    required string nextRunTimeStamp = 7;
    required int32 nextProductionValue = 8;
    required int32 warStartValue = 9;
}

message FactionResourceConsumption {
    required int64 id = 1;
    required int64 factionId = 2;
    required int64 warId = 3;
    required int64 factionHQCommandNodeWarInstanceId = 4;
    required int64 armyResourceCategoryId = 5;
    required string previousConsumptionTimeStamp = 6;
    required int32 previousConsumptionValue = 7;
    required int32 supplyQueueHead = 8;
    required int32 supplyQueueTail = 9;
}

message armyresource {
    required int64 id = 1;
    required int64 commandNodeWarInstanceId = 2;
    required int64 armyResourceCategoryId = 3;
    required uint32 count = 4;
    required int64 warid = 5;
}

message battle {
    required sfixed64 id = 1;
    required int64 warid = 2;
    required int64 mapEntityId = 3;
    required int64 mapEntityTypeId = 4;
    required string start = 5;
    required uint32 factioncount = 9;
    required int64 excludedFactionId = 10;
    required float position = 11;
    required string activationTimeStamp = 12;
}

message CommandNodeDefinition {
    required int64 id = 1;
    required string name = 2;
    required string abbreviation = 3;
    required int64 ownerPlayerId = 4;
    required int64 factionTemplateId = 5;
    required int64 commandNodeTemplateId = 6;
    required int32 rank = 7;
    optional int64 supplyResourceCategoryId = 8;
    required int64 generalCharacterId = 9;
    required int64 statUpdateTimeStamp = 10;
    required bool suppliedOnCreation = 11;
}

message CommandNodeWarInstance {
    required int64 id = 1;
    required int64 commandNodeDefinitionId = 2;
    required int64 parentCommandNodeInstanceId = 3;
    required int64 factionId = 4;
    required int64 mapEntityId = 5;
    required int64 mapEntityTypeId = 6;
    required int64 warId = 7;
    required uint32 morale = 8;
    required int64 lastReset = 9;
    required uint32 isDeployed = 10;
    required bool hasGottenSoldierResourcesForFree = 11;
    required bool hasGottenVehicleResourcesForFree = 12;
    required uint32 maxMorale = 13;
    required float moraleGainModifier = 14;
}

message faction {
    required int64 id = 1;
    required int64 factiontemplateid = 2;
    required int64 supremecommand = 4;
    required int64 war = 5;
    required float underdogBonusXpMultiplier = 6;
    required float underdogBonusWarfundsMultiplier = 7;
}

message accesspointstatus {
    required sfixed64 id = 1;
    required int64 warid = 2;
    required int64 accesspointid = 3;
    required int64 factionid = 4;
}

message accesspointtemplate {
    required int64 id = 1;
    required int64 gamemap = 2;
    required float posx = 3;
    required float posy = 4;
    required string abbr = 5;
    required uint32 actionid = 6;
}

message supplylinestatus {
    required sfixed64 id = 1;
    required int64 warid = 2;
    required int64 factionid = 3;
    required int64 supplylineid = 4;
}

message air_commandnode_base {
    required int64 id = 1;
    required int64 commandNodeWarInstanceId = 2;
    required int64 battlefieldid = 3;
    required int64 targetentityid = 4;
    required string targetentitytype = 5;
    required int64 warid = 6;
}

message air_transport {
    required int64 id = 1;
    required int64 commandNodeWarInstanceId = 2;
    required int64 fromentityid = 3;
    required int32 fromentitytype = 4;
    required int64 toentityid = 5;
    required int32 toentitytype = 6;
    required int64 begintime = 7;
    required int64 endtime = 8;
    required int64 warid = 9;
}

message missionresource {
    required int64 id = 1;
    required int64 missionid = 2;
    required int64 warid = 3;
    required int64 factionId = 4;
    required int64 commandNodeWarInstanceId = 5;
    required int64 commandNodeTemplateId = 6;
    required int64 accesspointTemplateId = 7;
    required uint32 locked = 8;
    required bool allowedToLobby = 9;
    required bool spawnInAir = 10;
}

message transport_commandnode_segment {
    required int64 id = 1;
    required int64 commandNodeWarInstanceId = 2;
    required int64 supplylineid = 3;
    required int64 fromAccesspoint = 4;
    required int64 toAccesspoint = 5;
    required string begintime = 6;
    required string endtime = 7;
    required int64 warid = 8;
    optional int32 approachingSkirmish = 9;
}
